-- Создание таблицы фильмов
CREATE TABLE IF NOT EXISTS FILMS (
    id BIGINT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    description VARCHAR(200),
    release_date INTEGER NOT NULL,
CONNECTION FILMS_PK PRIMARY KEY KEY (id)
);
CREATE INDEX FILMS_MPA_FK_INDEX_3 ON 
FILMS (MPA_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_3 ON 
FILMS (ID);

-- Создание таблицы жанров
CREATE TABLE IF NOT EXISTS GENRES (
    id INTEGER NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
CONSTRAINT GENRES_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_5A ON GENRES (ID);

-- Создание таблицы лайков
CREATE TABLE IF NOT EXISTS MPA (
    id INTEGER NOT NULL AUTO_INCREMENT,
    rating VARCHAR NOT NULL,
CONSTRAINT MPA_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_1 ON MPA (ID);

-- Создание таблицы лайков
CREATE TABLE IF NOT EXISTS LIKES (
    film_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
CONSTRAINT LIKES_PK PRIMARY KEY (film_id, user_id)
);
CREATE INDEX LIKES_FILMS_FK_INDEX_4 ON LIKES (FILM_DI);
CREATE INDEX LIKES_USERS_FK_INDEX_4 ON LIKES (USER_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_45 ON LIKES (FILM_DI, USER_ID);

-- Создание таблицы жанры фильма
CREATE TABLE IF NOT EXISTS FILM_GENRE (
    film_id BIGINT NOT NULL,
    genre_id INTEGER NOT NULL
);
CREATE INDEX FILM_GENRE__FILMS_FK_INDEX_A FILM_GENRE (FILM_ID);
CREATE INDEX FILM_GENRE__GENRES_FK_INDEX_A FILM_GENRE (GENRE_ID);

--Создание таблицы дружбы
CREATE TABLE IF NOT EXISTS FRIENDSHIPS (
    from_user_id BIGINT NOT NULL,
    to_user_id BIGINT NOT NULL,
CONSTRAINT FRIENDSHIPS_PK PRIMARY KEY (to_user_id, from_user_id)
);
CREATE INDEX FRIENDSHIPS_USERS_FK_1_INDEX_D ON FRIENDSHIPS (TO_USER_ID);
CREATE INDEX FRIENDSHIPS_USERS_FK_INDEX_D ON FRIENDSHIPS (FROM_USER_ID);
CREATE UNIQUE INDEX PRIMARY_KEY_D ON FRIENDSHIPS (FROM_USER_ID, TO_USER_ID);

-- Создание таблицы пользователей
CREATE TABLE IF NOT EXISTS USERS (
    id BIGINT NOT NULL AUTO_INCREMENT,
    email VARCHAR(255) NOT NULL,
    login VARCHAR(255) NOT NULL,
    name VARCHAR(255) NOT NULL,
    brithday DATE NOT NULL,
    CONSTRAINT USERS_PK PRIMARY KEY (ID)
);
CREATE UNIQUE INDEX PRIMARY_KEY_4 ON USERS (ID);